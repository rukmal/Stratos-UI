<%
/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

var log = new Log();

if (request.getMethod() != 'POST') {
	response.sendError(400);
} else {
	try {
		var requestData = request.getContent();
		if (typeof(requestData) === 'string') {
			try {
				requestData = eval('(' + requestData + ')');
			} catch (e) {
				response.sendError(400);
			}
		}
		if ('category' in requestData && 'name' in requestData) {
			response.content = openFile(requestData.category, requestData.name);
		} else {
			response.sendError(400);
		}
	} catch (e) {
		response.sendError(400);
	}
}

/**
 * Function to open the josn file and return the
 * JSON skeleton of the corresponding API call
 * @param  {String} category Category of the form (i.e. user management/configure)
 * @param  {Strign} name     Name of the form (eg: autoscalingpolicies, iaas)
 * @return {JSON}            JSON skeleton of the corresponding API call
 */
function openFile (category, name) {
	var filePath = '/forms/' + category + '/' + name + '.json';
	var file = new File(filePath);
	file.open('r');
	var fileContent = file.readAll();
	var jsonFile = eval("(" + fileContent + ")");
	return jsonFile.raw_json;
}
%>